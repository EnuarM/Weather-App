{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Boot Camp Henry\\\\M2\\\\FT-M2-master\\\\09-React-Routing\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\nimport { Route, Routes } from 'react-router-dom';\nimport About from './components/About.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]); //cities = []\n  //setCities => f(que actualiza el estado)\n\n  const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\n  function onSearch(ciudad) {\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  ;\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cards","Nav","Route","Routes","About","App","cities","setCities","apiKey","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","filter","c"],"sources":["C:/Users/User/Documents/Boot Camp Henry/M2/FT-M2-master/09-React-Routing/homework/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\nimport {Route, Routes} from 'react-router-dom';\nimport About from './components/About.jsx';\n\nexport default function App() { \n\n  const[cities, setCities] = useState([]);\n  //cities = []\n      //setCities => f(que actualiza el estado)\n\n      const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n      function onSearch(ciudad) {\n        //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n        //pero de momento agregaremos una ciudad por default para ver que funcione\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n        .then(r => r.json())\n        .then((recurso) => {\n            if(recurso.main !== undefined){\n            const ciudad = {\n              min: Math.round(recurso.main.temp_min),\n              max: Math.round(recurso.main.temp_max),\n              img: recurso.weather[0].icon,\n              id: recurso.id,\n              wind: recurso.wind.speed,\n              temp: recurso.main.temp,\n              name: recurso.name,\n              weather: recurso.weather[0].main,\n              clouds: recurso.clouds.all,\n              latitud: recurso.coord.lat,\n              longitud: recurso.coord.lon\n            };\n            setCities(oldCities => [...oldCities, ciudad]);\n          }else {\n            alert(\"Ciudad no encontrada\");\n          }\n        });\n      };\n\n      function onClose(id) {\n        setCities(oldCities => oldCities.filter(c => c.id !== id));\n      }\n\n    return (\n      <div className=\"App\">\n      <Route exact\n    path='/about'\n     component={About}\n      />      \n    <hr />\n    </div>\n      \n    );    \n  }\n    \n    \n\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE5B,MAAK,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAAnC,CAF4B,CAG5B;EACI;;EAEA,MAAMS,MAAM,GAAG,kCAAf;;EACA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;IACxB;IACA;IACAC,KAAK,CAAE,oDAAmDD,MAAO,UAASF,MAAO,eAA5E,CAAL,CACCI,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEOG,OAAD,IAAa;MACf,IAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;QAC9B,MAAMP,MAAM,GAAG;UACbQ,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;UAEbC,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;UAGbC,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;UAIbC,EAAE,EAAEZ,OAAO,CAACY,EAJC;UAKbC,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;UAMbC,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;UAObC,IAAI,EAAEhB,OAAO,CAACgB,IAPD;UAQbN,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;UASbgB,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;UAUbC,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;UAWbC,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;QAXX,CAAf;QAaA/B,SAAS,CAACgC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe7B,MAAf,CAAd,CAAT;MACD,CAfC,MAeI;QACJ8B,KAAK,CAAC,sBAAD,CAAL;MACD;IACF,CArBD;EAsBD;;EAAA;;EAED,SAASC,OAAT,CAAiBd,EAAjB,EAAqB;IACnBpB,SAAS,CAACgC,SAAS,IAAIA,SAAS,CAACG,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,KAASA,EAA/B,CAAd,CAAT;EACD;;EAEH,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACA,QAAC,KAAD;MAAO,KAAK,MAAZ;MACF,IAAI,EAAC,QADH;MAED,SAAS,EAAEvB;IAFV;MAAA;MAAA;MAAA;IAAA,QADA,eAKF;MAAA;MAAA;MAAA;IAAA,QALE;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAhDqBC,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}